<link href="~/datatable/datatables.min.css" rel="stylesheet" />
<link href="~/datatable/bootstrap-5-5.1.3/css/bootstrap.min.css" rel="stylesheet" />
<link href="~/datatable/datatables-1.13.1/css/datatables.bootstrap5.min.css" rel="stylesheet" />
<script src="~/datatable/datatables.min.js"></script>
<script src="~/datatable/bootstrap-5-5.1.3/js/bootstrap.bundle.min.js"></script>
<script src="~/datatable/datatables-1.13.1/js/datatables.bootstrap5.min.js"></script>


<div class="container container-fluid">
    <div class="row">
        <div class="col">
            <div class="card-header">Kişiler</div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="row">
                <div class="col w-100">
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <table id="tblPersonList" class="table table-striped listtable">
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal 1 -->
<div class="modal fade" id="mdlPersonDetail" tabindex="-1" aria-labelledby="mdlPersonDetailLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="mdlPersonDetailLabel">Kişi Detay</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    @Html.Hidden("Id")
                    @Html.Hidden("UUID")
                    <div class="form-floating mb-2">
                        <input type="text" id="Name" class="form-control form-control-sm" placeholder="Adı">
                        <label for="floatingInput">Adı</label>
                    </div>
                    <div class="form-floating mb-2">
                        <input type="text" id="Surname" class="form-control form-control-sm" placeholder="Soyadı">
                        <label for="floatingInput">Soyadı</label>
                    </div>
                    <div class="form-floating mb-2">
                        <input type="text" id="CompanyName" class="form-control form-control-sm" placeholder="Firma Adı">
                        <label for="floatingInput">Firma Adı</label>
                    </div>
                    <div class="row">
                        <div class="col">
                            <table id="tblContactInfoView" class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Telefon No</th>
                                        <th>E-Posta</th>
                                        <th>Lokasyon</th>
                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-sml" data-bs-dismiss="modal">Kapat</button>
                <button type="button" id="btnSavePerson" class="btn btn-primary btn-sml"><i class="fa fa-save"></i> Kaydet</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal 2 -->
<div class="modal fade" id="mdlContactInfo" tabindex="-1" aria-labelledby="mdlProductDetailLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="mdlProductDetailLabel">Kişi İletişim Bilgisi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col">
                            Adı
                        </div>
                        <div class="col">
                            Soyadı
                        </div>
                        <div class="col">
                            Firma Adı
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <span class="fw-bold" id="spnName"></span>
                        </div>
                        <div class="col">
                            <span class="fw-bold" id="spnSurname"></span>
                        </div>
                        <div class="col">
                            <span class="fw-bold" id="spnCompanyName"></span>
                        </div>
                    </div>
                    @Html.Hidden("ContactId")
                    @Html.Hidden("ContactUUID")
                    <div class="form-floating mb-2">
                        <input type="tel" id="PhoneNumber" class="form-control form-control-sm" placeholder="Telefon No">
                        <label for="floatingInput">Telefon No</label>
                    </div>
                    <div class="form-floating mb-2">
                        <input type="email" id="Email" class="form-control form-control-sm" placeholder="E-Posta">
                        <label for="floatingInput">E-Posta</label>
                    </div>
                    <div class="form-floating mb-2">
                        <input type="text" id="Location" class="form-control form-control-sm" placeholder="Lokasyon">
                        <label for="floatingInput">Lokasyon</label>
                    </div>
                    <div class="row">
                        <div class="col">
                            <table id="tblContactInfoEdit" class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Telefon No</th>
                                        <th>E-Posta</th>
                                        <th>Lokasyon</th>
                                        <th>İşlem</th>
                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-sml" data-bs-dismiss="modal">Kapat</button>
                <button type="button" id="btnSaveContactInfo" class="btn btn-primary btn-sml"><i class="fa fa-save"></i> Kaydet</button>
            </div>
        </div>
    </div>
</div>

<script>
    var tblPersonList = $('#tblPersonList').DataTable({
        serverSide: true,
        select: true,
        paging: true,
        ordering: true,
        columnDefs: [{ targets: [1, 2], className: "truncate" }],
        fnCreatedRow: function (nRow, aData, iDataIndex) {
            $(nRow).attr('id', aData["UUID"]);
            $(nRow).find(".truncate").each(function () {
                $(this).attr("title", this.innerText);
            });
        },
        language: {
            url: "/datatable/i18n/tr.json"
        },
        order: [[2, "desc"]],

        ajax: {
            url: "/Person/PersonDtoData",
            method: "POST"
        },
        columns: [
            { data: 'UUID', title: "Kayıt No", orderable: false, visible: false, name: 'UUID' },
            { data: 'Name', title: "Adı", name: 'Name', width: "20%" },
            { data: 'Surname', title: "Soyadı", name: 'Surname', width: "20%" },
            { data: 'CompanyName', title: "Firma", name: 'CompanyName', width: "20%" },
            {
                data: 'ContactInfos',
                title: "İletişim Bilgileri",
                name: 'ContactInfos',
                width: "15%",
                render: function (data, type, row, meta) {
                    var rowValue = '';
                    if (data != null && data != undefined && data != '') {
                        rowValue = data;
                    }
                    let titleHtml = `<div class='tooltiptext1'><div class='row bold'><div class='col'>Telefon No</div><div class='col'>E-Posta</div><div class='col'>Lokasyon</div></div>`;
                    $.each(rowValue, function (idx, val) {
                        titleHtml += `<div class='row'><div class='col'>` + val.PhoneNumber + `</div><div class='col'>` + val.Email + `</div><div class='col'>` + val.Location + `</div></div>`;
                    });
                    titleHtml += '</div>';
                    htmlStr = `<div class="tooltip1" >` + rowValue.length + ` iletişim bilgisi mevcut.` + titleHtml + `</div>`;

                    return htmlStr;
                }
            },
            {
                data: "Id",
                title: "İşlem",
                name: "Id",
                width: "25%",
                render: function (data, type, row, meta) {
                    var rowValue = '';
                    if (data != null && data != undefined && data != '') {
                        rowValue = data;
                    }

                    if (rowValue)
                        htmlStr = `<div class="btn-group btn-group-sm" role="group" aria-label="tblAccessButtons">
                                    <button class='btn btn-sm btn-outline-info btnAddContact' type='button' id='btnAddContact_` + rowValue + `' data-id='` + rowValue + `' ><i class='fa fa-address-book '></i> İletişim Bilgisi Düzenle</button>
                                                <button class='btn btn-sm btn-outline-warning btnDetail' type='button' id='btnDetail_` + rowValue + `' data-id="` + rowValue + `"><i class='fa fa-search'></i> Düzenle</button>
                                                <button class='btn btn-sm btn-outline-danger btnDelete' type='button' id='btnDelete_` + rowValue + `' data-id='` + rowValue + `' ><i class='fa fa-trash'></i> Sil</button>
                                                </div>`;

                    return htmlStr;
                }

            },
        ],
        "initComplete": function (oSettings) {
            $('#tblPersonList_filter').append(`<button class="btn btn-sm btn-outline-success m-1 align-self-end " id="btnAddPerson"><i class="fa fa-plus"></i> Ekle</button>`);
        }

    });

    $('#tblPersonList').delegate('.btnDetail', 'click', function () {
        var recordId = $(this).data('id');
        var tableData = tblPersonList.rows().data();
        var selectedRow = $.grep(tableData, function (e) { return e.Id == recordId });
        $('#Id').val(recordId);
        $('#UUID').val(selectedRow[0].UUID);
        $('#Name').val(selectedRow[0].Name);
        $('#Surname').val(selectedRow[0].Surname);
        $('#CompanyName').val(selectedRow[0].CompanyName);
        RefreshDataTable('#tblContactInfoView', selectedRow[0].ContactInfos);
        $('#mdlPersonDetail').modal('show');
    });

    $('#mdlPersonDetail').delegate('#btnSavePerson', 'click', function () {
        var recordId = $('#Id').val();
        
        var person = {
            Id: recordId,
            UUID: $('#UUID').val(),
            Name: $('#Name').val(),
            Surname: $('#Surname').val(),
            CompanyName: $('#CompanyName').val()            
        }
        debugger
        var tableData = tblPersonList.rows().data();
        var selectedRow = $.grep(tableData, function (e) { return e.Id == recordId });
        if(selectedRow.length > 0)
        if(selectedRow[0].ContactInfos != null && selectedRow[0].ContactInfos.length > 0)
            person.ContactInfos =  selectedRow[0].ContactInfos;

        PostAjaxWithData({ url: "/Person/PersonCreate", data: { model: person } }, SavePersonSuccess);
    });

    function SavePersonSuccess(data) {
        if (data.ServiceState)
            if (data.RequestState) {
                $('#mdlPersonDetail').modal('hide');
                RefreshListDataTable('#tblPersonList');
            }
            else
                ShowWarningMessage({ Text: "İşleminizde hata oluştu." + data.ErrorMsg });
        else
            ShowWarningMessage({ Text: "Serviste hata oluştu." + data.ErrorMsg });

        console.log(data);
    }

    $('#tblPersonList').delegate('.btnDelete', 'click', function () {
        var recordId = $(this).data('id');
        ShowWarningMessage({
            cancelButton: "Hayır",
            deleteUrl: '/Person/PersonDelete',
            deleteData: { Id: recordId },
            deleteDatatable: tblPersonList,
            successButton: "Evet",
            text: "Kaydı silmek istiyor musunuz?"
        });
    });


    $('.container').delegate('#btnAddPerson', 'click', function () {
        $('#Id').val('');
        $('#UUID').val('');
        $('#Name').val('');
        $('#Surname').val('');
        $('#CompanyName').val('');
        $('#mdlPersonDetail').modal('show');
    });

    var contactInfoView = $('#tblContactInfoView').DataTable({
        select: true,
        paging: false,
        ordering: true,
        order: [[0, "desc"]],
        searching: false,
        language: {
            url: "/datatable/i18n/tr.json"
        },
        columns: [
            { data: 'PhoneNumber', title: "Telefon No", name: 'PhoneNumber' },
            { data: 'Email', title: "E-Posta", name: 'Email' },
            { data: 'Location', title: "Lokasyon", name: 'Location' }
        ]
    });

    var contactTable = $('#tblContactInfoEdit').DataTable({
        select: true,
        paging: false,
        ordering: true,
        order: [[0, "desc"]],
        searching: false,
        language: {
            url: "/datatable/i18n/tr.json"
        },
        columnDefs: [{ targets: 0, className: "truncate" }],
        columns: [
            { data: 'PhoneNumber', title: "Telefon No", name: 'PhoneNumber' },
            { data: 'Email', title: "E-Posta", name: 'Email' },
            { data: 'Location', title: "Lokasyon", name: 'Location' },
            {
                data: "PhoneNumber",
                title: "İşlem",
                name: "PhoneNumber",
                render: function (data, type, row, meta) {
                    var rowValue = '';
                    if (data != null && data != undefined && data != '') {
                        rowValue = data;
                    }

                    if (rowValue)
                        htmlStr = `<button class='btn btn-sm btn-outline-warning btnEditContact' type='button' id='btnEditContact_` + rowValue + `' data-id='` + rowValue + `' data-phonenumber='` + row.PhoneNumber + `' data-email='` + row.Email + `' data-location='` + row.Location + `'><i class='fa fa-address-book '></i>Seç</button>
                                          <button class='btn btn-sm btn-outline-danger btnDeleteContact' type='button' id='btnDeleteContact_` + rowValue + `' data-id='` + rowValue + `' data-phonenumber='` + row.PhoneNumber + `' data-email='` + row.Email + `' data-location='` + row.Location + `'><i class='fa fa-trash'></i>Sil</button>`;

                    return htmlStr;
                }
            }
        ]
    });


    $('#tblPersonList').delegate('.btnAddContact', 'click', function () {

        var recordId = $(this).data('id');
        var tableData = tblPersonList.rows().data();
        var selectedRow = $.grep(tableData, function (e) { return e.Id == recordId });
        $('#PhoneNumber').val('');
        $('#Email').val('');
        $('#Location').val('');
        $('#ContactId').val(recordId);
        $('#ContactUUID').val(selectedRow[0].UUID);
        $('#spnName').empty().append(selectedRow[0].Name);
        $('#spnSurname').empty().append(selectedRow[0].Surname);
        $('#spnCompanyName').empty().append(selectedRow[0].CompanyName);
        RefreshDataTable('#tblContactInfoEdit', selectedRow[0].ContactInfos);
        $('#mdlContactInfo').modal('show');
    });

    $('#tblContactInfoEdit').delegate('.btnEditContact', 'click', function () {
        $('#PhoneNumber').val($(this).data('phonenumber'));
        $('#Email').val($(this).data('email'));
        $('#Location').val($(this).data('location'));
    });

    $('#mdlContactInfo').delegate('#btnSaveContactInfo', 'click', function () {
        var recordId = $('#ContactId').val();
        var contactInfo = {
            PhoneNumber: $('#PhoneNumber').val(),
            Email: $('#Email').val(),
            Location: $('#Location').val()
        }
        var tableData = tblPersonList.rows().data();
        var selectedPerson = $.grep(tableData, function (e) { return e.Id == recordId });
        var contactAvailable = false;
        $.each(selectedPerson[0].ContactInfos, function (idx, itm) {
            if (itm.PhoneNumber === contactInfo.PhoneNumber &&
                itm.Email === contactInfo.Email &&
                itm.Location === contactInfo.Location)
                contactAvailable = true;
        });

        if (!contactAvailable) {
            selectedPerson[0].ContactInfos.push(contactInfo);
            var person = selectedPerson[0];
            PostAjaxWithData({ url: "/Person/PersonCreate", data: { model: person } }, SaveContactInfoSuccess);
        }
        else
            ShowWarningMessage({ text: 'Girilen iletişim bilgisi kişi kaydında mevcut.' })

    });
    function SaveContactInfoSuccess(data) {
        if (data.ServiceState)
            if (data.RequestState) {
                $('#PhoneNumber').val('');
                $('#Email').val('');
                $('#Location').val('');
                RefreshListDataTable('#tblPersonList');
                RefreshDataTable('#tblContactInfoEdit', data.Item.ContactInfos);
            }
            else
                ShowWarningMessage({ Text: "İşleminizde hata oluştu." + data.ErrorMsg });
        else
            ShowWarningMessage({ Text: "Serviste hata oluştu." + data.ErrorMsg });

        console.log(data);
    }


    $('#tblContactInfoEdit').delegate('.btnDeleteContact', 'click', function () {
        var recordId = $('#ContactId').val();  
        
        var phoneNumber= $(this).data('phonenumber');
        var email= $(this).data('email');
        var location= $(this).data('location');
        
        var tableData = tblPersonList.rows().data();
        var selectedPerson = $.grep(tableData, function (e) { return e.Id == recordId });
        var contactList = [];
        $.each(selectedPerson[0].ContactInfos, function (idx, itm) {            
            if (itm.PhoneNumber == phoneNumber && itm.Email == email && itm.Location == location)
                console.log(itm);
            else
                contactList.push(itm);
        });
        
        selectedPerson[0].ContactInfos = contactList;
        var person = selectedPerson[0];
        PostAjaxWithData({ url: "/Person/PersonCreate", data: { model: person } }, SaveContactInfoSuccess);
    });
    function SaveContactInfoSuccess(data) {
        if (data.ServiceState)
            if (data.RequestState) {
                $('#PhoneNumber').val('');
                $('#Email').val('');
                $('#Location').val('');
                RefreshListDataTable('#tblPersonList');
                RefreshDataTable('#tblContactInfoEdit', data.Item.ContactInfos);
            }
            else
                ShowWarningMessage({ Text: "İşleminizde hata oluştu.<br>" + data.ErrorMsg });
        else
            ShowWarningMessage({ Text: "Serviste hata oluştu.<br>" + data.ErrorMsg });

        console.log(data);
    }


</script>